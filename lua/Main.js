// Generated by Haxe 4.0.0 (git build development @ 476d180)
(function () { "use strict";
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var Main = function() { };
Main.main = function() {
	return Main.calc(KEYS,ARGV);
};
Main.calc = function(keys,args) {
	var numKeys = Std.parseInt(__lua__("#keys") + "") + 1;
	var a = [];
	var k = [];
	var _g1 = 1;
	var _g = numKeys;
	while(_g1 < _g) {
		var i = _g1++;
		a.push(args[i]);
	}
	var _g11 = 1;
	var _g2 = numKeys;
	while(_g11 < _g2) {
		var i1 = _g11++;
		k.push(keys[i1]);
	}
	return a.concat(k).join(",");
};
var Std = function() { };
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Main.main();
})();
